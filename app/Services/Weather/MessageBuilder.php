<?php

namespace App\Services\Weather;

use DefStudio\Telegraph\Keyboard\Button;
use DefStudio\Telegraph\Keyboard\Keyboard;

class MessageBuilder
{
    public static function startMessage(): string
    {
        return "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç <b>Cognitive</b>.\n\n" .
            "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ.\n\n" .
            "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n" .
            "/weather ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–≥–æ–¥—É –Ω–∞ –¥–µ–Ω—å\n" .
            "/subscribe ‚Äî –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑\n" .
            "/unsubscribe ‚Äî –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É\n" .
            "/status ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏";
    }

    public static function weatherMessage(array $data): string
    {
        $rainfallText = $data['rainfall'] > 0 
            ? "üåß –û—Å–∞–¥–∫–∏: {$data['rainfall']} –º–º" 
            : "‚òî –ë–µ–∑ –æ—Å–∞–¥–∫–æ–≤";
        
        return "üå§ <b>–ü–æ–≥–æ–¥–∞ –≤ {$data['address']}</b>\n\n"
            . "üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:\n"
            . "  ‚Ä¢ –°—Ä–µ–¥–Ω—è—è: <b>{$data['avg_temperature']}¬∞C</b>\n"
            . "  ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: <b>{$data['max_temperature']}¬∞C</b>\n\n"
            . "üí® –í–µ—Ç–µ—Ä: <b>{$data['windspeed']} –∫–º/—á</b>\n"
            . "‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: <b>{$data['cloudcover']}%</b>\n"
            . $rainfallText;
    }

    public static function morningMessage(array $data): string
    {
        $rainfallText = $data['rainfall'] > 0 
            ? "üåß –û—Å–∞–¥–∫–∏: {$data['rainfall']} –º–º" 
            : "‚òî –ë–µ–∑ –æ—Å–∞–¥–∫–æ–≤";
        
        return "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ!\n\n"
            . "üå§ <b>–ü–æ–≥–æ–¥–∞ –≤ {$data['address']} —Å–µ–≥–æ–¥–Ω—è:</b>\n\n"
            . "üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:\n"
            . "  ‚Ä¢ –°—Ä–µ–¥–Ω—è—è: <b>{$data['avg_temperature']}¬∞C</b>\n"
            . "  ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: <b>{$data['max_temperature']}¬∞C</b>\n\n"
            . "üí® –í–µ—Ç–µ—Ä: <b>{$data['windspeed']} –∫–º/—á</b>\n"
            . "‚òÅÔ∏è –û–±–ª–∞—á–Ω–æ—Å—Ç—å: <b>{$data['cloudcover']}%</b>\n"
            . $rainfallText
            . "\n\n–£–¥–∞—á–Ω–æ–≥–æ –¥–Ω—è!";
    }

    public static function askLocation(): string
    {
        return "–£–∫–∞–∂–∏—Ç–µ –Ω–∞—Å–µ–ª—ë–Ω–Ω—ã–π –ø—É–Ω–∫—Ç\n\n–ù–∞–ø—Ä–∏–º–µ—Ä: <i>–¢–∞–º–∞–Ω—å, –¢–µ–º—Ä—é–∫—Å–∫–∏–π —Ä–∞–π–æ–Ω</i>";
    }

    public static function successSubscribe(string $location): string
    {
        return "‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É—Ç—Ä–µ–Ω–Ω—é—é —Ä–∞—Å—Å—ã–ª–∫—É –ø–æ –∞–¥—Ä–µ—Å—É <i>{$location}</i> –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!\n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /unsubscribe";
    }

    public static function subscribeAlreadyExists(string $location): string
    {
        return "‚ÑπÔ∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∞ –ø–æ –∞–¥—Ä–µ—Å—É <i>{$location}</i>\n\n–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /unsubscribe";
    }

    public static function subscribeNotExists(): string
    {
        return "‚ÑπÔ∏è –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫";
    }

    public static function unknownCommand():string
    {
        return "‚ÑπÔ∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞";
    }

    public static function declineSubscribe(): string
    {
        return "‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞";
    }

    public static function apiErrorMessage(): string
    {
        return "‚ùå –£–∫–∞–∑–∞–Ω–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —Å–µ—Ä–≤–∏—Å –ø–æ–≥–æ–¥—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.";
    }

    public static function keyboard()
    {
        $keyboard = Keyboard::make()
        ->buttons([
            Button::make('‚úâÔ∏è –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è')->action('subscribe'),
            Button::make('üå§ –ü–æ–≥–æ–¥–∞')->action('weather'),
            Button::make('‚ùå –û—Ç–ø–∏—Å–∞—Ç—å—Å—è')->action('unsubscribe'),
            Button::make('‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å')->action('status'),
            Button::make('üÜò –ü–æ–º–æ—â—å')->action('start'),
        ])
        ->chunk(2)
        ->rightToLeft();

        return $keyboard;
    }
}